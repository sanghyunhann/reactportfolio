{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","themeName","setThemeName","useState","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","_jsx","Provider","value","toggleTheme","name","localStorage","setItem","header","githomepage","title","about","role","description","resume","social","linkedin","github","projects","stack","sourceCode","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","_jsxs","className","style","display","length","href","onClick","type","WbSunnyRoundedIcon","Brightness2Icon","CloseIcon","MenuIcon","Header","About","src","alt","text","split","map","item","React","Fragment","uuidv4","_Fragment","GitHubIcon","ProjectContainer","project","uniqid","livePreview","LaunchIcon","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","ArrowUpwardIcon","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a5bd397.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  githomepage: 'http://localhost:3000/sanghyunhann',\n  title: 'HSH',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'SangHyun Han',\n  role: 'Back End Engineer',\n  description:\n    '안녕하세요, 저는 한상현입니다. 😀\\n새로운 기술에 관심이 많으며 동료들과의 커뮤니케이션과 상호 피드백 및 리뷰를 좋아합니다. \\n현재 백엔드 개발자로 구직중입니다. 맡은 일에 자부심을 갖고 도전을 경험할 수 있는 회사에서 일하고 싶습니다.',\n  resume: `${process.env.PUBLIC_URL}/resume.pdf`,\n  social: {\n    linkedin: 'https://vintage-quill-3fd.notion.site/5315385e4c71412b8d7ab9b7430cb745?pvs=4',\n    github: 'https://github.com/sanghyunhann',\n  },\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'Easy Pick',\n    description:\n      '평소 아침에는 무엇을 입을지, 점심에는 무엇을 먹을지, 저녁에는 무엇을 볼지 고민하게 되는데, 이러한 고민을 해결해주는 웹 플랫폼 입니다.',\n    stack: ['JAVA', 'SPRING BOOT', 'PYTHON', 'FLASK', 'HTML5', 'CSS3', 'JAVASCRIPT', 'JSP', 'MYSQL', 'MONGODB', 'VS CODE', 'GIT-HUB'],\n    sourceCode: 'https://github.com/sanghyunhann/pirates_server',\n  },\n  {\n    name: 'OEMarket',\n    description:\n      '오이마켓은 당근마켓을 벤치마킹 하여 중고 거래 서비스를 제공하는 플랫폼 입니다.',\n    stack: ['JAVA', 'SPRING', 'HTML5', 'CSS3', 'JAVASCRIPT', 'JSP', 'XML', 'ORACLE SQL', 'APAACHE TOMCAT', 'ECLIPSE', 'GIT-HUB'],\n    sourceCode: 'https://github.com/sanghyunhann/oeMarket',\n  },\n  {\n    name: '은행고객 이탈 원인 및 고객 이탈 예측',\n    description:\n      '머신러닝을 이용한 이탈 고객 예측을 위한 머신러닝 프로젝트',\n    stack: ['PYTHON', 'NUMPY', 'PANDAS', 'SKLEARN', 'MATPLOTLIB', 'SEABORN', 'VS CODE', 'GIT-HUB'],\n    sourceCode: 'https://github.com/sanghyunhann/zb.MLproject',\n  },\n]\n\nconst skills = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'JAVA',\n  'PYTHON',\n  'HTML5',\n  'CSS3',\n  'JAVASCRIPT',\n  'JQUERY',\n  'ORACL SQL',\n  'MYSQL',\n  'SPRING BOOT',\n  'FLASK',\n  'GITHUB',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'gks7654@naver.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { githomepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {githomepage ? (\n          <a href={githomepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { about } from '../../portfolio';\nimport './About.css';\n\nconst parseDescription = (text) => \n  text.split('\\n').map((item) => (\n    <React.Fragment key={uuidv4()}>\n      {item}\n      <br />\n    </React.Fragment>\n  ));\n\nconst About = () => {\n  const { name, role, description, resume, social } = about;\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>A {role}.</h2>}\n      \n      <div className='about__content'>\n        <img src={`${process.env.PUBLIC_URL}/default_img.jpg`} alt=\"Description\" className='about__image'/>\n        <p className='about__desc'>\n          {parseDescription(description)}\n        </p>\n      </div>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n                \n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <img src={`${process.env.PUBLIC_URL}/notion.png`} alt=\"LinkedIn Icon\" className='link--icon-img'/>\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top' aria-label='top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n     <p>Copyright 2024. 한상현 All rights reserved.</p>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}